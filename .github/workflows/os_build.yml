name: Package application

on:
  workflow_dispatch:
    inputs:
      stethoscope_repo_branch_name:
        description: Branch name of Stethoscope Repository
        required: true
        type: string
      build_type:
        description: Type of build to generate & upload
        required: true
        type: string

jobs:
  build-and-package-macos:
    if: ${{ github.event.inputs.build_type == 'all' || github.event.inputs.build_type == 'macos' }}
    outputs: 
      version_number: ${{ steps.extract_version.outputs.version}}
    runs-on: macos-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          repository: goSprinto/stethoscope-app
          ref: ${{ github.event.inputs.stethoscope_repo_branch_name }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: yarn install

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            ${{ runner.home }}/.cache/electron
            ${{ runner.home }}/.cache/electron-builder
          key: macos-latest-dependencies-${{ hashFiles('**/yarn.lock') }}

      - name: Build and Package for macOS
        run: |
          yarn run-s prebuild 'build:electron -m --x64 --arm64'
          
        
      - name: Save artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Dist-macos
          path: dist
          
      - name: Get version from package.json
        id: extract_version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT  
  
  build-and-package-ubuntu:
    if: ${{ github.event.inputs.build_type == 'all' || github.event.inputs.build_type == 'ubuntu' }}
    outputs: 
      version_number: ${{ steps.extract_version.outputs.version}}
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          repository: goSprinto/stethoscope-app
          ref: 'dhananjay-build-test'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: yarn install

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            ${{ runner.home }}/.cache/electron
            ${{ runner.home }}/.cache/electron-builder
          key: ubuntu-latest-dependencies-${{ hashFiles('**/yarn.lock') }}

      - name: Cleanup old cache
        if: runner.os == 'ubuntu-latest'
        run: rm -rf ${{ runner.home }}/.cache/electron-builder/wine

      - name: Build and Package for Ubuntu
        run: |
          yarn run-s prebuild _electron-builder-linux
          
        
      - name: Save artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Dist-ubuntu
          path: dist
      
      - name: Get version from package.json
        id: extract_version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT  


  build-and-package-windows:
    if: ${{ github.event.inputs.build_type == 'all' || github.event.inputs.build_type == 'windows' }}
    outputs: 
      version_number: ${{ steps.extract_version.outputs.version}}
    runs-on: macos-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          repository: goSprinto/stethoscope-app
          ref: 'dhananjay-build-test'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: yarn install

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            ${{ runner.home }}/.cache/electron
            ${{ runner.home }}/.cache/electron-builder
          key: windows-latest-dependencies-${{ hashFiles('**/yarn.lock') }}

      - name: Build and Package for Windows
        run: |
          yarn build:windows
          
        
      - name: Save artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Dist-windows
          path: dist
          
      - name: Get version from package.json
        id: extract_version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT  
  
  
  upload-to-s3-ubuntu:
    if: ${{ github.event.inputs.build_type == 'all' || github.event.inputs.build_type == 'ubuntu' }} 
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    needs: [build-and-package-ubuntu]
    
    steps:
      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::426216900398:role/github-actions-sprinto-repo-role
          aws-region: us-west-1
    
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          pattern: Dist-*
          merge-multiple: true
          
              
      - name: Push artifacts to S3
        run: |
            mkdir artifacts && \
            cp dist/*.{yml,AppImage} artifacts/ && \
            aws s3 sync artifacts s3://drsprinto-build/${{ needs.build-and-package-ubuntu.outputs.version_number }}/  
            
  upload-to-s3-windows:
    if: ${{ github.event.inputs.build_type == 'all' || github.event.inputs.build_type == 'windows' }} 
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    needs: [build-and-package-windows]
    
    steps:
      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::426216900398:role/github-actions-sprinto-repo-role
          aws-region: us-west-1
    
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          pattern: Dist-*
          merge-multiple: true
          
      - name: Push artifacts to S3
        run: |
            mkdir artifacts && \
            cp dist/*.{yml,exe} artifacts/ && \
            aws s3 sync artifacts s3://drsprinto-build/${{ needs.build-and-package-windows.outputs.version_number }}/  
            
  upload-to-s3-macos:
    if: ${{ github.event.inputs.build_type == 'all' || github.event.inputs.build_type == 'macos' }} 
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    needs: [build-and-package-macos]
    
    steps:
      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::426216900398:role/github-actions-sprinto-repo-role
          aws-region: us-west-1
    
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          pattern: Dist-*
          merge-multiple: true      
          
      - name: Push artifacts to S3
        run: |
            mkdir artifacts && \
            cp dist/*.{yml,dmg} artifacts/ && \
            aws s3 sync artifacts s3://drsprinto-build/${{ needs.build-and-package-macos.outputs.version_number }}/ 
